Proiectati si implementati urmatorul protocol de comunicare intre procese:

- comunicarea se face prin executia de comenzi citite de la tastatura in procesul parinte si executate in procesele copil
- comenzile sunt siruri de caractere delimitate de new line
- raspunsurile sunt siruri de octeti prefixate de lungimea raspunsului
- rezultatul obtinut in urma executiei oricarei comenzi va fi afisat de procesul parinte
- protocolul minimal cuprinde comenzile:
    - "login : username" - a carei existenta este validata prin utilizarea unui fisier de configurare
    - "myfind file" - o comanda care permite gasirea unui fisier si afisarea de informatii asociate acelui fisier; informatiile vor fi de tipul: data crearii, data modificarii, dimensiunea fisierului, drepturile de access asupra fisierului etc.
    - "mystat file" - o comanda ce permite vizualizarea atributelor unui fisier
    - "quit"
- in implementarea comenzilor "myfind" si "mystat" nu se va utiliza nicio functie din familia "exec()" in vederea executiei unor comenzi de sistem ce ofera functionalitatile respective
- comunicarea intre procese se va face folosind cel putin o data fiecare din urmatoarele mecanisme ce permit comunicarea: pipe-uri interne, pipe-uri externe si socketpair


Observatii:
- termen de predare: laboratorul din saptamana 5
- orice incercare de frauda, in functie de gravitate, va conduce la propunerea pentru exmatriculare a studentului in cauza sau la punctaj negativ


struct stat { /* when _DARWIN_FEATURE_64_BIT_INODE is defined */
     dev_t           st_dev;           /* ID of device containing file */
     mode_t          st_mode;          /* Mode of file (see below) */
     nlink_t         st_nlink;         /* Number of hard links */
     ino_t           st_ino;           /* File serial number */
     uid_t           st_uid;           /* User ID of the file */
     gid_t           st_gid;           /* Group ID of the file */
     dev_t           st_rdev;          /* Device ID */
     struct timespec st_atimespec;     /* time of last access */
     struct timespec st_mtimespec;     /* time of last data modification */
     struct timespec st_ctimespec;     /* time of last status change */
     struct timespec st_birthtimespec; /* time of file creation(birth) */
     off_t           st_size;          /* file size, in bytes */
     blkcnt_t        st_blocks;        /* blocks allocated for file */
     blksize_t       st_blksize;       /* optimal blocksize for I/O */
     uint32_t        st_flags;         /* user defined flags for file */
     uint32_t        st_gen;           /* file generation number */
     int32_t         st_lspare;        /* RESERVED: DO NOT USE! */
     int64_t         st_qspare[2];     /* RESERVED: DO NOT USE! */
 };

 char buf[256];
 snprintf(buf, sizeof buf, "%s%s%s%s", str1, str2, str3, str4);